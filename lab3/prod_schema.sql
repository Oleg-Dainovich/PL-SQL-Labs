-- TABLES --

CREATE TABLE prod_users (
    id NUMBER PRIMARY KEY,
    username VARCHAR2(50),
    email VARCHAR2(100)
);

CREATE TABLE prod_orders (
    id NUMBER PRIMARY KEY,
    user_id NUMBER,
    amount NUMBER,
    status VARCHAR2(20),
    FOREIGN KEY (user_id) REFERENCES prod_users(id)
);

CREATE TABLE prod_products (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100),
    price NUMBER
);

CREATE TABLE common_table (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100),
    description VARCHAR2(255)
);

CREATE TABLE prod.diff_table (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);

DROP TABLE DIFF_TABLE ;

-- PROCEDURES --

CREATE OR REPLACE PROCEDURE create_table_prod AS
BEGIN
    EXECUTE IMMEDIATE 'CREATE TABLE prod_table (id NUMBER, name VARCHAR2(100))';
END;

CREATE OR REPLACE PROCEDURE create_proc_prod AS
BEGIN
    EXECUTE IMMEDIATE 'CREATE OR REPLACE PROCEDURE prod_proc AS BEGIN NULL; END;';
END;

CREATE OR REPLACE PROCEDURE create_index_prod AS
BEGIN
    EXECUTE IMMEDIATE 'CREATE INDEX prod_index ON prod_table(id)';
END;

CREATE OR REPLACE PROCEDURE common_proc AS
BEGIN
    DBMS_OUTPUT.PUT_LINE('This is a common procedure.');
END;

CREATE OR REPLACE PROCEDURE diff_proc(arg1 NUMBER) AS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Procedure do_something_prod is called with argument: ' || TO_CHAR(arg1));
END;

-- FUNCTIONS --

CREATE OR REPLACE FUNCTION prod_function_1 RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is prod function 1.';
END;

CREATE OR REPLACE FUNCTION prod_function_2 RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is prod function 2.';
END;

CREATE OR REPLACE FUNCTION common_func RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is a common function.';
END;

CREATE OR REPLACE FUNCTION diff_func(arg1 NUMBER) RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is prod diff function with argument: ' || TO_CHAR(arg1);
END;


-- INDEXES --

CREATE INDEX idx_prod_products ON prod.prod_products(name);

CREATE INDEX idx_prod_common_table ON prod.common_table(name);

CREATE INDEX idx_prod_ya_ne_sdal ON prod.prod_orders(status);


-- DDL --

CREATE TABLE PROD.DEV_USERS AS (SELECT * FROM DEV.DEV_USERS WHERE 1=0);
CREATE TABLE PROD.DEV_ORDERS AS (SELECT * FROM DEV.DEV_ORDERS WHERE 1=0);
CREATE TABLE PROD.DEV_PRODUCTS AS (SELECT * FROM DEV.DEV_PRODUCTS WHERE 1=0);
ALTER TABLE PROD.DIFF_TABLE ADD STATUS VARCHAR2(20);
DROP TABLE PROD.PROD_USERS CASCADE CONSTRAINTS;
DROP TABLE PROD.PROD_ORDERS CASCADE CONSTRAINTS;
DROP TABLE PROD.PROD_PRODUCTS CASCADE CONSTRAINTS;
CREATE OR REPLACE 
PROCEDURE create_index_dev AS
BEGIN
    EXECUTE IMMEDIATE 'CREATE INDEX dev_index ON dev_table(id)';
END;
CREATE OR REPLACE 
PROCEDURE create_proc_dev AS
BEGIN
    EXECUTE IMMEDIATE 'CREATE OR REPLACE PROCEDURE dev_proc AS BEGIN NULL; END;';
END;
CREATE OR REPLACE 
PROCEDURE create_table_dev AS
BEGIN
    EXECUTE IMMEDIATE 'CREATE TABLE dev_table (id NUMBER, name VARCHAR2(100))';
END;
DROP PROCEDURE PROD.CREATE_INDEX_PROD;
DROP PROCEDURE PROD.CREATE_TABLE_PROD;
DROP PROCEDURE PROD.CREATE_PROC_PROD;
CREATE OR REPLACE 
FUNCTION dev_function_1 RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is dev function 1.';
END;
CREATE OR REPLACE 
FUNCTION dev_function_2 RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is dev function 2.';
END;
DROP FUNCTION PROD.PROD_FUNCTION_2;
DROP FUNCTION PROD.PROD_FUNCTION_1;
CREATE OR REPLACE 
PROCEDURE diff_proc(arg1 VARCHAR2) AS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Procedure diff_proc from DEV is called with argument: ' || arg1);
END;
CREATE OR REPLACE 
FUNCTION diff_func(arg1 VARCHAR2) RETURN VARCHAR2 AS
BEGIN
    RETURN 'This is DEV diff function with argument: ' || arg1;
END;
DROP INDEX IDX_PROD_COMMON_TABLE;
DROP INDEX IDX_PROD_PRODUCTS;
CREATE NORMAL INDEX IDX_DEV_PRODUCTS ON PROD.DEV_PRODUCTS(NAME);
CREATE NORMAL INDEX IDX_DEV_COMMON_TABLE ON PROD.COMMON_TABLE(NAME);